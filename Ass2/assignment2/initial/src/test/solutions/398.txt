Program([FuncDecl(Id(execution),[],VoidType,Block([StringLiteral(Five final tests!!!!!!),Block([StringLiteral(Hi hi, are you scared right now??????????)]),Block([StringLiteral(Final challenge!),For(Id(test);Id(all);Id(statements);For(Id(test);Id(all_again);Id(statements);If(BinaryOp(==,Id(thisTestcase),BooleanLiteral(true)),Dowhile([StringLiteral(Yeah you nailed the statements),Break(),Return(BooleanLiteral(true)),Continue(),Dowhile([Id(statement1),If(Id(youCanPassedThis),BinaryOp(=,Id(yourStatement),Id(good)),CallExpr(Id(needToCheck),[]))],Id(stillRunning))],CallExpr(Id(stillRunning),[])),Block([If(ArrayCell(Id(fuckingShitIDareYouToPassThisFuckingStuff),IntLiteral(3000)),Block([Dowhile([Dowhile([Dowhile([For(IntLiteral(1);IntLiteral(2);IntLiteral(3);Block([BinaryOp(=,Id(what),Id(doesnot)),BinaryOp(=,Id(kill),Id(you)),BinaryOp(=,Id(makes),Id(youStronger))])),BinaryOp(=,Id(passed),Id(stronger))],Id(thisIsGoingToEnd))],CallExpr(Id(butThereAreStillManyToCome),[]))],Id(goodLuck))]))])))),Dowhile([Dowhile([Dowhile([Dowhile([Block([])],BooleanLiteral(true))],BooleanLiteral(false))],BinaryOp(&&,BooleanLiteral(true),BooleanLiteral(true)))],BinaryOp(||,BooleanLiteral(false),BinaryOp(&&,BooleanLiteral(true),BooleanLiteral(false)))),Block([Block([]),Block([]),Block([]),Block([]),Block([]),Block([]),Block([]),Block([])]),BinaryOp(+,BinaryOp(+,BinaryOp(+,BinaryOp(+,BinaryOp(+,BinaryOp(+,BinaryOp(+,BinaryOp(+,BinaryOp(+,BinaryOp(+,BinaryOp(+,BinaryOp(+,BinaryOp(+,BinaryOp(+,Id(_),Id(_)),Id(_)),Id(_)),Id(_)),Id(_)),Id(_)),Id(_)),Id(_)),Id(_)),Id(_)),Id(_)),Id(_)),Id(_)),Id(_)),BinaryOp(-,BinaryOp(-,BinaryOp(-,BinaryOp(-,BinaryOp(-,BinaryOp(-,BinaryOp(-,BinaryOp(-,BinaryOp(-,BinaryOp(-,BinaryOp(-,BinaryOp(-,BinaryOp(-,Id(_),Id(_)),Id(_)),Id(_)),Id(_)),Id(_)),Id(_)),Id(_)),Id(_)),Id(_)),Id(_)),Id(_)),Id(_)),Id(_))])])),FuncDecl(Id(execution),[],VoidType,Block([StringLiteral(Five final tests!!!!!!),Block([StringLiteral(Hi hi, are you scared right now??????????)]),Block([StringLiteral(Final challenge!),For(Id(test);Id(all);Id(statements);For(Id(test);Id(all_again);Id(statements);If(BinaryOp(==,Id(thisTestcase),BooleanLiteral(true)),Dowhile([StringLiteral(Yeah you nailed the statements),Break(),Return(BooleanLiteral(true)),Continue(),Dowhile([Id(statement1),If(Id(youCanPassedThis),BinaryOp(=,Id(yourStatement),Id(good)),CallExpr(Id(needToCheck),[]))],Id(stillRunning))],CallExpr(Id(stillRunning),[])),Block([If(ArrayCell(Id(fuckingShitIDareYouToPassThisFuckingStuff),IntLiteral(3000)),Block([Dowhile([Dowhile([Dowhile([For(IntLiteral(1);IntLiteral(2);IntLiteral(3);Block([BinaryOp(=,Id(what),Id(doesnot)),BinaryOp(=,Id(kill),Id(you)),BinaryOp(=,Id(makes),Id(youStronger))])),BinaryOp(=,Id(passed),Id(stronger))],Id(thisIsGoingToEnd))],CallExpr(Id(butThereAreStillManyToCome),[]))],Id(goodLuck))]))])))),Dowhile([Dowhile([Dowhile([Dowhile([Block([])],BooleanLiteral(true))],BooleanLiteral(false))],BinaryOp(&&,BooleanLiteral(true),BooleanLiteral(true)))],BinaryOp(||,BooleanLiteral(false),BinaryOp(&&,BooleanLiteral(true),BooleanLiteral(false)))),Block([Block([]),Block([]),Block([]),Block([]),Block([]),Block([]),Block([]),Block([])]),BinaryOp(+,BinaryOp(+,BinaryOp(+,BinaryOp(+,BinaryOp(+,BinaryOp(+,BinaryOp(+,BinaryOp(+,BinaryOp(+,BinaryOp(+,BinaryOp(+,BinaryOp(+,BinaryOp(+,BinaryOp(+,Id(_),Id(_)),Id(_)),Id(_)),Id(_)),Id(_)),Id(_)),Id(_)),Id(_)),Id(_)),Id(_)),Id(_)),Id(_)),Id(_)),Id(_)),BinaryOp(-,BinaryOp(-,BinaryOp(-,BinaryOp(-,BinaryOp(-,BinaryOp(-,BinaryOp(-,BinaryOp(-,BinaryOp(-,BinaryOp(-,BinaryOp(-,BinaryOp(-,BinaryOp(-,Id(_),Id(_)),Id(_)),Id(_)),Id(_)),Id(_)),Id(_)),Id(_)),Id(_)),Id(_)),Id(_)),Id(_)),Id(_)),Id(_))])])),FuncDecl(Id(execution),[],VoidType,Block([StringLiteral(Five final tests!!!!!!),Block([StringLiteral(Hi hi, are you scared right now??????????)]),Block([StringLiteral(Final challenge!),For(Id(test);Id(all);Id(statements);For(Id(test);Id(all_again);Id(statements);If(BinaryOp(==,Id(thisTestcase),BooleanLiteral(true)),Dowhile([StringLiteral(Yeah you nailed the statements),Break(),Return(BooleanLiteral(true)),Continue(),Dowhile([Id(statement1),If(Id(youCanPassedThis),BinaryOp(=,Id(yourStatement),Id(good)),CallExpr(Id(needToCheck),[]))],Id(stillRunning))],CallExpr(Id(stillRunning),[])),Block([If(ArrayCell(Id(fuckingShitIDareYouToPassThisFuckingStuff),IntLiteral(3000)),Block([Dowhile([Dowhile([Dowhile([For(IntLiteral(1);IntLiteral(2);IntLiteral(3);Block([BinaryOp(=,Id(what),Id(doesnot)),BinaryOp(=,Id(kill),Id(you)),BinaryOp(=,Id(makes),Id(youStronger))])),BinaryOp(=,Id(passed),Id(stronger))],Id(thisIsGoingToEnd))],CallExpr(Id(butThereAreStillManyToCome),[]))],Id(goodLuck))]))])))),Dowhile([Dowhile([Dowhile([Dowhile([Block([])],BooleanLiteral(true))],BooleanLiteral(false))],BinaryOp(&&,BooleanLiteral(true),BooleanLiteral(true)))],BinaryOp(||,BooleanLiteral(false),BinaryOp(&&,BooleanLiteral(true),BooleanLiteral(false)))),Block([Block([]),Block([]),Block([]),Block([]),Block([]),Block([]),Block([]),Block([])]),BinaryOp(+,BinaryOp(+,BinaryOp(+,BinaryOp(+,BinaryOp(+,BinaryOp(+,BinaryOp(+,BinaryOp(+,BinaryOp(+,BinaryOp(+,BinaryOp(+,BinaryOp(+,BinaryOp(+,BinaryOp(+,Id(_),Id(_)),Id(_)),Id(_)),Id(_)),Id(_)),Id(_)),Id(_)),Id(_)),Id(_)),Id(_)),Id(_)),Id(_)),Id(_)),Id(_)),BinaryOp(-,BinaryOp(-,BinaryOp(-,BinaryOp(-,BinaryOp(-,BinaryOp(-,BinaryOp(-,BinaryOp(-,BinaryOp(-,BinaryOp(-,BinaryOp(-,BinaryOp(-,BinaryOp(-,Id(_),Id(_)),Id(_)),Id(_)),Id(_)),Id(_)),Id(_)),Id(_)),Id(_)),Id(_)),Id(_)),Id(_)),Id(_)),Id(_))])]))])