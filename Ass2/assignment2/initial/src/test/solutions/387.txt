Program([FuncDecl(Id(xor),[VarDecl(a,IntType),VarDecl(b,IntType)],IntType,Block([Return(BinaryOp(||,BinaryOp(&&,UnaryOp(!,Id(a)),Id(b)),BinaryOp(&&,Id(a),UnaryOp(!,Id(b)))))])),FuncDecl(Id(min),[VarDecl(x,IntType),VarDecl(y,IntType)],IntType,Block([Return(CallExpr(Id(xor),[Id(y),BinaryOp(&&,CallExpr(Id(xor),[Id(x),Id(y)]),UnaryOp(-,BinaryOp(<,Id(x),Id(y))))]))])),FuncDecl(Id(max),[VarDecl(x,IntType),VarDecl(y,IntType)],IntType,Block([Return(CallExpr(Id(xor),[Id(x),BinaryOp(&&,CallExpr(Id(xor),[Id(x),Id(y)]),UnaryOp(-,BinaryOp(<,Id(x),Id(y))))]))])),FuncDecl(Id(main),[],IntType,Block([VarDecl(x,IntType),BinaryOp(=,Id(x),IntLiteral(15)),VarDecl(y,IntType),BinaryOp(=,Id(y),IntLiteral(6)),CallExpr(Id(printf),[StringLiteral(Minimum of ),Id(x),StringLiteral( and ),Id(y),StringLiteral( is ),CallExpr(Id(min),[Id(x),Id(y)])]),CallExpr(Id(printf),[StringLiteral(Maximum of ),Id(x),StringLiteral( and ),Id(y),StringLiteral( is ),CallExpr(Id(max),[Id(x),Id(y)])])]))])