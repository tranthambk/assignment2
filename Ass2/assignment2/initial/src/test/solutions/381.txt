Program([FuncDecl(Id(main),[],IntType,Block([VarDecl(array,ArrayType(IntType,100)),VarDecl(n,IntType),VarDecl(c,IntType),VarDecl(d,IntType),VarDecl(swap,IntType),CallExpr(Id(printf),[StringLiteral(Enter number of elements\n)]),CallExpr(Id(scanf),[StringLiteral(%d),Id(n)]),CallExpr(Id(printf),[StringLiteral(Enter %d integers\n),Id(n)]),For(BinaryOp(=,Id(c),IntLiteral(0));BinaryOp(<,Id(c),Id(n));BinaryOp(=,Id(c),BinaryOp(+,Id(c),IntLiteral(1)));CallExpr(Id(scanf),[StringLiteral(%d),ArrayCell(Id(array),Id(c))])),For(BinaryOp(=,Id(c),IntLiteral(0));BinaryOp(<,Id(c),BinaryOp(-,Id(n),IntLiteral(1)));BinaryOp(=,Id(c),BinaryOp(+,Id(c),IntLiteral(1)));Block([For(BinaryOp(=,Id(d),IntLiteral(0));BinaryOp(<,Id(d),BinaryOp(-,BinaryOp(-,Id(n),Id(c)),IntLiteral(1)));BinaryOp(=,Id(d),BinaryOp(+,Id(d),IntLiteral(1)));Block([If(BinaryOp(>,ArrayCell(Id(array),Id(d)),ArrayCell(Id(array),BinaryOp(+,Id(d),IntLiteral(1)))),Block([BinaryOp(=,Id(swap),ArrayCell(Id(array),Id(d))),BinaryOp(=,ArrayCell(Id(array),Id(d)),ArrayCell(Id(array),BinaryOp(+,Id(d),IntLiteral(1)))),BinaryOp(=,ArrayCell(Id(array),BinaryOp(+,Id(d),IntLiteral(1))),Id(swap))]))]))])),CallExpr(Id(printf),[StringLiteral(Sorted list in ascending order:\n)]),For(BinaryOp(=,Id(c),IntLiteral(0));BinaryOp(<,Id(c),Id(n));BinaryOp(=,Id(c),BinaryOp(+,Id(c),IntLiteral(1)));CallExpr(Id(printf),[StringLiteral(%d\n),ArrayCell(Id(array),Id(c))])),Return(IntLiteral(0))]))])